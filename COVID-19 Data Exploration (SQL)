-- Confirming Imports Successful
SELECT *
FROM portfolio-melissachan.covid_analysis.covid_deaths;

SELECT *
FROM portfolio-melissachan.covid_analysis.covid_vaccinations;

-- Ordering by location and date (3,4)
SELECT *
FROM portfolio-melissachan.covid_analysis.covid_deaths
ORDER BY 3,4; 

SELECT *
FROM portfolio-melissachan.covid_analysis.covid_vaccinations
ORDER BY 3,4; 


-- COVID-19 CASES VS DEATH

-- Selecting Data 
-- [location and date is now (1,2)]
SELECT location, date, total_cases, new_cases, total_deaths, population
FROM portfolio-melissachan.covid_analysis.covid_deaths
ORDER BY 1,2; 

-- Total Cases vs Total Deaths (Likelihood of fatality if you contract COVID in your country)
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percentage
FROM portfolio-melissachan.covid_analysis.covid_deaths
WHERE location = 'Canada'
ORDER BY 1,2; 

-- Total Cases vs Population (Percentage of population infected with COVID)
SELECT location, date, total_cases, population, (total_cases/population)*100 AS population_infected_percentage
FROM portfolio-melissachan.covid_analysis.covid_deaths
WHERE location = 'Canada'
ORDER BY 1,2; 

-- Countries with the Highest Infection Rate compared to Population
SELECT location, population, MAX(total_cases) AS max_infection_count, max(total_cases/population)*100 AS max_population_infected_percentage
FROM portfolio-melissachan.covid_analysis.covid_deaths
GROUP BY location, population
ORDER BY max_population_infected_percentage desc; 

-- Countries with the Highest Death Count per Population
SELECT location, MAX(CAST(total_deaths AS int)) AS total_death_count
FROM portfolio-melissachan.covid_analysis.covid_deaths
WHERE continent IS NOT NULL -- (Prevents continents appearing in results)
GROUP BY location
ORDER BY total_death_count desc;

-- The country with the highest amount of deaths compared to population is United States! 


-- Continents with the Highest Death Count per Population
SELECT continent, MAX(CAST(total_deaths AS int)) AS total_death_count
FROM portfolio-melissachan.covid_analysis.covid_deaths
WHERE continent IS NOT NULL 
GROUP BY continent
ORDER BY total_death_count desc;

-- Global Cases, Deaths, and Percentage of Death compared to Cases 
SELECT SUM(new_cases) AS total_cases, SUM(cast(new_deaths as int)) AS total_deaths, SUM(cast(new_deaths AS int))/SUM(new_cases)*100 AS death_percentage
FROM portfolio-melissachan.covid_analysis.covid_deaths
WHERE continent IS NOT NULL 
ORDER BY total_cases, total_deaths;


-- COVID-19 VACCINATIONS

-- 1/2 Total Population vs Vaccinations (JOIN)
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vac.new_vaccinations
FROM portfolio-melissachan.covid_analysis.covid_deaths deaths -- (shortening to 'deaths')
JOIN portfolio-melissachan.covid_analysis.covid_vaccinations vac -- (shortening to 'vac')
  ON deaths.location = vac.location -- join condition
  AND deaths.date = vac.date -- join condition
WHERE deaths.continent IS NOT NULL -- (Prevents locations as continents appearing in results)
ORDER BY 2,3; -- (ordering by location and date)

-- 2/2 Total Population vs Vaccinations (Adding a Rolling Total Vaccination Count)
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vac.new_vaccinations, 
  SUM(vac.new_vaccinations) OVER (PARTITION BY deaths.location
    ORDER BY deaths.location, deaths.date) AS total_vaccinated_count
FROM portfolio-melissachan.covid_analysis.covid_deaths deaths 
JOIN portfolio-melissachan.covid_analysis.covid_vaccinations vac 
  ON deaths.location = vac.location
  AND deaths.date = vac.date
WHERE deaths.continent IS NOT NULL 
ORDER BY 2,3; 

-- Total Population vs Vaccinations (Adding Vaccination Percentage)
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vac.new_vaccinations, 
  SUM(vac.new_vaccinations) OVER (PARTITION BY deaths.location ORDER BY deaths.location, deaths.date) AS total_vaccinated_count,
  (SUM(vac.new_vaccinations) OVER (PARTITION BY deaths.location ORDER BY deaths.location, deaths.date) / deaths.population) *100 AS vaccination_percentage
FROM portfolio-melissachan.covid_analysis.covid_deaths deaths 
JOIN portfolio-melissachan.covid_analysis.covid_vaccinations vac 
  ON deaths.location = vac.location
  AND deaths.date = vac.date
WHERE deaths.continent IS NOT NULL 
ORDER BY 2,3; 

-- Creating a View 
CREATE VIEW portfolio-melissachan.covid_analysis.pop_vs_vac AS 
(
  SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vac.new_vaccinations, 
  SUM(vac.new_vaccinations) OVER (PARTITION BY deaths.location ORDER BY deaths.location, deaths.date) AS total_vaccinated_count,
  (SUM(vac.new_vaccinations) OVER (PARTITION BY deaths.location ORDER BY deaths.location, deaths.date) / deaths.population) *100 AS vaccination_percentage
  FROM portfolio-melissachan.covid_analysis.covid_deaths deaths 
  JOIN portfolio-melissachan.covid_analysis.covid_vaccinations vac 
    ON deaths.location = vac.location
    AND deaths.date = vac.date
  WHERE deaths.continent IS NOT NULL 
  ORDER BY 2,3
);

-- Global Population vs Vaccinations
SELECT *
FROM portfolio-melissachan.covid_analysis.pop_vs_vac;

-- Canadian Population vs Vaccinations
SELECT *
FROM portfolio-melissachan.covid_analysis.pop_vs_vac
WHERE location = 'Canada';

-- Canadian Population vs Vaccinations (Starting from First Day of Vaccinations)
SELECT *
FROM portfolio-melissachan.covid_analysis.pop_vs_vac
WHERE location = 'Canada' AND new_vaccinations > 0; 

-- Creating Temp Table for Canadian Population vs Vaccinations (new_vaccines > 0)
CREATE TABLE portfolio-melissachan.covid_analysis.canadian_vac AS
SELECT * 
FROM portfolio-melissachan.covid_analysis.pop_vs_vac
WHERE location = 'Canada' AND new_vaccinations > 0
ORDER BY date; 
